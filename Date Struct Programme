#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;
//Date Struct

struct MonthVariable
{
	string monthName;
	int monthDays;
};

struct Date
{
	int day;
	int month;
	int year;
};

const vector<MonthVariable> MONTHS =
{
	{"January", 31},
	{"February", 28},
	{"March", 31},
	{"April", 30},
	{"May", 31},
	{"June", 30},
	{"July", 31},
	{"August", 31},
	{"September", 30},
	{"October", 31},
	{"November", 30},
	{"December", 31},
};

const vector<string> WEEK_DAY =
{
	"Monday",
	"Tuesday",
	"Wednesday",
	"Thursday",
	"Friday",
	"Saturday",
	"Sunday",
};

void greeting(int& userInput)
{
	while (userInput < 1 || userInput > 5)
	{
		cout << endl;
		cout << "Welcome to Date Container Program" << endl;
		cout << "Functions: " << endl;
		cout << "1: Create New Date" << endl;
		cout << "2: Print Date" << endl;
		cout << "3: Calculate difference in days between 2 dates" << endl;
		cout << "4: Get Day Name" << endl;
		cout << "5: To Quit" << endl;
		std::cin >> userInput;
	}
}

bool isLeapYear(int year)
{
	if ((year % 4 == 0) && (year % 100 != 0))
	{
		return true;
	}
	if ((year % 4 == 0) && (year % 100 == 0) && (year % 400 == 0))
	{
		return true;
	}
	return false;
}

bool isValidDate(int day, int month, int year)
{
	if (year < 1)
	{
		return false;
	}
	if (month < 1 || month > 12)
	{
		return false;
	}
	int numberOfDays = MONTHS[month - 1].monthDays;
	if (month == 2 && isLeapYear(year))
	{
		numberOfDays++;
	}
	if (day < 1 || day > numberOfDays)
	{
		return false;
	}
	return true;
}

void sortDates(vector<Date> myDates)
{
	do
	{

	} while ();
}

void createNewDate(vector<Date> myDates)
{
	int day, month, year;
	while (true)
	{
		cout << "Enter your date in numbers with spaces: DAY MONTH YEAR" << endl;
		cin >> day >> month >> year;
		if (!cin)
		{
			cout << endl << "Invalid Input!" << endl;
			cin.clear();
			continue;
		}
		if (!isValidDate(day, month, year))
		{
			cout << endl << "Invalid Input!" << endl;
			cin.clear();
			continue;
		}
		break;
	}
	myDates.push_back({ day, month, year });
	sortDates(myDates);
}

void showListOfDates(vector<Date> myDates)
{
	cout << endl << "List of Dates: dd/mm/yyyy";
	int count = 1;
	for (const auto& date : myDates)
	{
		int d = date.day;
		int m = date.month;
		int y = date.year;
		cout << endl << count << ": ";
		if (d < 10)
		{
			cout << "0" << d;
		}
		else
		{
			cout << d;
		}
		cout << "/";
		if (m < 10)
		{
			cout << "0" << m;
		}
		else
		{
			cout << m;
		}
		cout << "/";
		if (y < 1000 && y < 100 && y < 10)
		{
			cout << "000" << y;
		}
		else if (y < 1000 && y < 100)
		{
			cout << "00" << y;
		}
		else if (y < 1000)
		{
			cout << "0" << y;
		}
		else
		{
			cout << y;
		}
	}
}

void printDate(vector<Date> myDates)
{
	showListOfDates(myDates);
	int userInput = 0;
	while (userInput < 1 || userInput > myDates.size())
	{
		cout << endl << "Choose Date" << endl;
		cin >> userInput;
		if (!cin)
		{
			continue;
		}
	}

}

int main()
{
	vector<Date> myDates = {};
	while (true)
	{
		int userInput = 0;
		greeting(userInput);
		if (userInput == 1)
		{
			createNewDate(myDates);
		}
		if (userInput == 2)
		{
			printDate(myDates);
		}
		if (userInput == 3)
		{
		}
		if (userInput == 4)
		{
		}
		if (userInput == 5)
		{
			break;
		}
	}
	cout << endl << "Program shutting down...";

	return 0;
}
